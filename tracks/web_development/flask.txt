Creating youre very own server: Flask to create a server

1. Must be in one Master Folder
2. Make a file inside the Master folder called app.py

Review app.py to create a Flask server 
(NOTE: On cs50 IDE the file must be titled "applicaiton.py")

    from flask import Flask

    app = Flask(__name__)

    @app.route("/") #This is the default webpage (homepage)
    def index():
        return "Hello World!"

    @app.route("/goodbye")
    def bye():
        return "Goodbye!"

------------------------------------------------------------------------------------------

Adding html, css, javascript via Flask Templates

1. inside the Master Folder, create a folder title "template"
2. create a new file inside it called index.html
3. style the html
4. import render_template inside the app.py
5. render_template inside the specific function you want to run   

    from flask import Flask, render_template

    app = Flask(__name__)

    @app.route("/") #This is the default webpage (homepage)
    def index():
        return render_template("index.html")

    @app.route("/goodbye")
    def bye():
        return "Goodbye!"


------------------------------------------------------------------------------------------

Using variables, loops, and conditions to make the app dynamic

1. inside the app.py file, you can give the return variable another variable
2. inside the html file, pass in the variable using syntax like {{ variableName }}

app.py

    @app.route("/") #This is the default webpage (homepage)
    def index():
        return render_template("index.html", name="Gian Millare")

html

    <body>
        <h1>Hello to the world of Flask, {{ name }} !!</h1>
    </body>

------------------------------------------------------------------------------------------

You can declare variables before the return line

1. repeat the above code but call the variable before the return line

app.py

@app.route("/") #This is the default webpage (homepage)
def index():
    random_number = random.randint(1, 100)
    return render_template("index.html", name="Gian Millare", number=random_number)

html

    <body>
        <h1>Hello to the world of Flask, {{ name }} !!</h1>
        <h2>Your lucky number is {{ number }}.</h2>
    </body>

------------------------------------------------------------------------------------------

Coin flipping using variables 0 and 1: folder --> coinflip

1. change random range to 0 to 1
2. insert a condition where 0 = tails and 1 = heads (conditions are done in the html file)

app.py

@app.route("/")
def home():
    random_number = random.randint(0, 1)
    return render_template("index.html", number=random_number )

html 

    <body>
        {% if number == 1 %}
            Your coin landed on HEADS!
        {% elif number == 0 %}
            Your coin landed on TAILS!
        {% endif %}
    </body>

------------------------------------------------------------------------------------------

Using forms inside Flask

1. create a form tag inside the html
2. create an action for the form --> in particular action="/routeName"
3. create a dataName for each input field --> tag "name"
3. create that route inside the application, give it access to get that data
    - the syntax to access the data is ---> variableName = request.args.get("dataName")
    - import request from Flask
4. create a new html file that will take in the request from step 3
5. inside the app.py file where we got the request from, and:
    - return render_template("htmlFileName", name=variableName)

app.py 

    from flask import Flask, render_template, request

    app = Flask(__name__)

    @app.route("/")
    def index():
        return render_template("index.html")

    @app.route("/submit_email")
    def submit_email():
        email = request.args.get("email")
        return render_template("formcompleted.html", email=email)

index.html

        <form action="/submit_email">
            <input name="email" type="text">
            <input type="submit">
        </form>

formcompleted.html

    <body>
        <h1>The email address " {{ email }} " is successfully submitted.</h1>
    </body>

------------------------------------------------------------------------------------------

